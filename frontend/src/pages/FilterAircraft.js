import React, { useEffect, useState } from 'react';
import PropTypes from 'prop-types';

function FilterAircraft({ onFilterChange }) {
  const [aircrafts, setAircrafts] = useState([]);

  useEffect(() => {
    fetch('http://localhost:5001/api/aircraft/types')
      .then((response) => response.json())
      .then((data) => {
        const updatedData = data.map((aircraft) => ({
          ...aircraft,
          is_checked: true,
        }));
        setAircrafts(updatedData);

        console.log('üîÑ Initial state:', updatedData);

        // ‚úÖ ƒê·∫£m b·∫£o tr·∫£ v·ªÅ [] khi load xong m√† kh√¥ng c√≥ g√¨ ƒë∆∞·ª£c ch·ªçn
        onFilterChange([]);
      })
      .catch((error) => console.error('L·ªói khi l·∫•y d·ªØ li·ªáu:', error));
  }, [onFilterChange]);

  // ‚úÖ D√πng useEffect ƒë·ªÉ theo d√µi s·ª± thay ƒë·ªïi c·ªßa state v√† c·∫≠p nh·∫≠t d·ªØ li·ªáu
  useEffect(() => {
    const selectedAircrafts = aircrafts
      .filter((aircraft) => aircraft.is_checked)
      .map((aircraft) => aircraft.type_name);

    console.log('üöÄ Selected aircrafts:', selectedAircrafts);

    // ‚úÖ Tr·∫£ v·ªÅ [] n·∫øu kh√¥ng c√≥ m·ª•c n√†o ƒë∆∞·ª£c ch·ªçn
    onFilterChange(selectedAircrafts);
  }, [aircrafts, onFilterChange]);

  // ‚úÖ X·ª≠ l√Ω khi thay ƒë·ªïi checkbox c·ªßa t·ª´ng lo·∫°i m√°y bay
  const handleCheckboxChange = (id) => {
    setAircrafts((prevAircrafts) =>
      prevAircrafts.map((aircraft) =>
        aircraft.id === id
          ? { ...aircraft, is_checked: !aircraft.is_checked }
          : aircraft
      )
    );
  };

  return (
    <div className="filter-wrapper">
      <div className="filter-section">
        <h3 className="filter-title">Lo·∫°i m√°y bay</h3>
        <table className="filter-table">
          <thead>
            <tr>
              <th>Hi·ªÉn th·ªã</th>
              <th>Lo·∫°i m√°y bay</th>
            </tr>
          </thead>
          <tbody>
            {/* ‚úÖ Danh s√°ch lo·∫°i m√°y bay */}
            {aircrafts.map((aircraft) => (
              <tr key={aircraft.id}
                  className={aircraft.is_checked ? 'selected' : ''}
              > 
                <td>
                  <input
                    type="checkbox"
                    checked={aircraft.is_checked}
                    onChange={() => handleCheckboxChange(aircraft.id)}
                  />
                </td>
                <td>{aircraft.type_name}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
    
  );
}

FilterAircraft.propTypes = {
  onFilterChange: PropTypes.func.isRequired,
};

export default FilterAircraft;
